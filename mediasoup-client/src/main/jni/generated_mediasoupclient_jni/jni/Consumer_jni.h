// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/mediasoup/droid/Consumer

#ifndef org_mediasoup_droid_Consumer_JNI
#define org_mediasoup_droid_Consumer_JNI

#include <jni.h>

#include "../include/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_mediasoup_droid_Consumer[];
const char kClassPath_org_mediasoup_droid_Consumer[] = "org/mediasoup/droid/Consumer";

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_mediasoup_droid_Consumer_00024Listener[];
const char kClassPath_org_mediasoup_droid_Consumer_00024Listener[] =
    "org/mediasoup/droid/Consumer$Listener";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass> g_org_mediasoup_droid_Consumer_clazz(nullptr);
#ifndef org_mediasoup_droid_Consumer_clazz_defined
#define org_mediasoup_droid_Consumer_clazz_defined
inline jclass org_mediasoup_droid_Consumer_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_mediasoup_droid_Consumer,
      &g_org_mediasoup_droid_Consumer_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_mediasoup_droid_Consumer_00024Listener_clazz(nullptr);
#ifndef org_mediasoup_droid_Consumer_00024Listener_clazz_defined
#define org_mediasoup_droid_Consumer_00024Listener_clazz_defined
inline jclass org_mediasoup_droid_Consumer_00024Listener_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_mediasoup_droid_Consumer_00024Listener,
      &g_org_mediasoup_droid_Consumer_00024Listener_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace mediasoupclient {

static base::android::ScopedJavaLocalRef<jstring> JNI_Consumer_GetNativeId(JNIEnv* env, jlong
    consumer);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_Consumer_nativeGetNativeId(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_GetNativeId(env, consumer).Release();
}

static base::android::ScopedJavaLocalRef<jstring> JNI_Consumer_GetProducerId(JNIEnv* env, jlong
    consumer);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_Consumer_nativeGetProducerId(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_GetProducerId(env, consumer).Release();
}

static jboolean JNI_Consumer_IsClosed(JNIEnv* env, jlong consumer);

JNI_GENERATOR_EXPORT jboolean Java_org_mediasoup_droid_Consumer_nativeIsClosed(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_IsClosed(env, consumer);
}

static jboolean JNI_Consumer_IsPaused(JNIEnv* env, jlong consumer);

JNI_GENERATOR_EXPORT jboolean Java_org_mediasoup_droid_Consumer_nativeIsPaused(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_IsPaused(env, consumer);
}

static base::android::ScopedJavaLocalRef<jstring> JNI_Consumer_GetKind(JNIEnv* env, jlong consumer);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_Consumer_nativeGetKind(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_GetKind(env, consumer).Release();
}

static jlong JNI_Consumer_GetTrack(JNIEnv* env, jlong consumer);

JNI_GENERATOR_EXPORT jlong Java_org_mediasoup_droid_Consumer_nativeGetTrack(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_GetTrack(env, consumer);
}

static base::android::ScopedJavaLocalRef<jstring> JNI_Consumer_GetRtpParameters(JNIEnv* env, jlong
    consumer);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_Consumer_nativeGetRtpParameters(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_GetRtpParameters(env, consumer).Release();
}

static base::android::ScopedJavaLocalRef<jstring> JNI_Consumer_GetAppData(JNIEnv* env, jlong
    consumer);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_Consumer_nativeGetAppData(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_GetAppData(env, consumer).Release();
}

static void JNI_Consumer_Resume(JNIEnv* env, jlong consumer);

JNI_GENERATOR_EXPORT void Java_org_mediasoup_droid_Consumer_nativeResume(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_Resume(env, consumer);
}

static void JNI_Consumer_Pause(JNIEnv* env, jlong consumer);

JNI_GENERATOR_EXPORT void Java_org_mediasoup_droid_Consumer_nativePause(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_Pause(env, consumer);
}

static base::android::ScopedJavaLocalRef<jstring> JNI_Consumer_GetStats(JNIEnv* env, jlong
    consumer);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_Consumer_nativeGetStats(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_GetStats(env, consumer).Release();
}

static void JNI_Consumer_Close(JNIEnv* env, jlong consumer);

JNI_GENERATOR_EXPORT void Java_org_mediasoup_droid_Consumer_nativeClose(
    JNIEnv* env,
    jclass jcaller,
    jlong consumer) {
  return JNI_Consumer_Close(env, consumer);
}


static std::atomic<jmethodID>
    g_org_mediasoup_droid_Consumer_00024Listener_onTransportClose(nullptr);
static void Java_Listener_onTransportClose(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    const base::android::JavaRef<jobject>& consumer) {
  jclass clazz = org_mediasoup_droid_Consumer_00024Listener_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_mediasoup_droid_Consumer_00024Listener_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onTransportClose",
          "(Lorg/mediasoup/droid/Consumer;)V",
          &g_org_mediasoup_droid_Consumer_00024Listener_onTransportClose);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, consumer.obj());
}

static std::atomic<jmethodID> g_org_mediasoup_droid_Consumer_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_Consumer_Constructor(JNIEnv* env, jlong
    nativeConsumer) {
  jclass clazz = org_mediasoup_droid_Consumer_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_mediasoup_droid_Consumer_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
          "(J)V",
          &g_org_mediasoup_droid_Consumer_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id, nativeConsumer);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace mediasoupclient

#endif  // org_mediasoup_droid_Consumer_JNI
