// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/mediasoup/droid/data/Parameters

#ifndef org_mediasoup_droid_data_Parameters_JNI
#define org_mediasoup_droid_data_Parameters_JNI

#include <jni.h>

#include "../include/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_mediasoup_droid_data_Parameters[];
const char kClassPath_org_mediasoup_droid_data_Parameters[] = "org/mediasoup/droid/data/Parameters";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass> g_org_mediasoup_droid_data_Parameters_clazz(nullptr);
#ifndef org_mediasoup_droid_data_Parameters_clazz_defined
#define org_mediasoup_droid_data_Parameters_clazz_defined
inline jclass org_mediasoup_droid_data_Parameters_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_mediasoup_droid_data_Parameters,
      &g_org_mediasoup_droid_data_Parameters_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace mediasoupclient {
namespace test {

static base::android::ScopedJavaLocalRef<jstring> JNI_Parameters_GenRouterRtpCapabilities(JNIEnv*
    env);

JNI_GENERATOR_EXPORT jstring
    Java_org_mediasoup_droid_data_Parameters_nativeGenRouterRtpCapabilities(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_Parameters_GenRouterRtpCapabilities(env).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_Parameters_GenRouterRtpCapabilitiesExclude(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& exclude);

JNI_GENERATOR_EXPORT jstring
    Java_org_mediasoup_droid_data_Parameters_nativeGenRouterRtpCapabilitiesExclude(
    JNIEnv* env,
    jclass jcaller,
    jstring exclude) {
  return JNI_Parameters_GenRouterRtpCapabilitiesExclude(env,
      base::android::JavaParamRef<jstring>(env, exclude)).Release();
}

static base::android::ScopedJavaLocalRef<jstring> JNI_Parameters_GenRtpParametersByKind(JNIEnv*
    env);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_data_Parameters_nativeGenRtpParametersByKind(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_Parameters_GenRtpParametersByKind(env).Release();
}

static base::android::ScopedJavaLocalRef<jstring> JNI_Parameters_GenLocalDtlsParameters(JNIEnv*
    env);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_data_Parameters_nativeGenLocalDtlsParameters(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_Parameters_GenLocalDtlsParameters(env).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_Parameters_GenTransportRemoteParameters(JNIEnv* env);

JNI_GENERATOR_EXPORT jstring
    Java_org_mediasoup_droid_data_Parameters_nativeGenTransportRemoteParameters(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_Parameters_GenTransportRemoteParameters(env).Release();
}

static base::android::ScopedJavaLocalRef<jstring> JNI_Parameters_GenProducerRemoteId(JNIEnv* env);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_data_Parameters_nativeGenProducerRemoteId(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_Parameters_GenProducerRemoteId(env).Release();
}

static base::android::ScopedJavaLocalRef<jstring> JNI_Parameters_GenConsumerRemoteParameters(JNIEnv*
    env, const base::android::JavaParamRef<jstring>& codecMimeType);

JNI_GENERATOR_EXPORT jstring
    Java_org_mediasoup_droid_data_Parameters_nativeGenConsumerRemoteParameters(
    JNIEnv* env,
    jclass jcaller,
    jstring codecMimeType) {
  return JNI_Parameters_GenConsumerRemoteParameters(env, base::android::JavaParamRef<jstring>(env,
      codecMimeType)).Release();
}


}  // namespace test
}  // namespace mediasoupclient

#endif  // org_mediasoup_droid_data_Parameters_JNI
