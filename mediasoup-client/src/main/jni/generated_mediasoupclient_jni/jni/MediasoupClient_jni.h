// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/mediasoup/droid/MediasoupClient

#ifndef org_mediasoup_droid_MediasoupClient_JNI
#define org_mediasoup_droid_MediasoupClient_JNI

#include <jni.h>

#include "../include/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_mediasoup_droid_MediasoupClient[];
const char kClassPath_org_mediasoup_droid_MediasoupClient[] = "org/mediasoup/droid/MediasoupClient";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass> g_org_mediasoup_droid_MediasoupClient_clazz(nullptr);
#ifndef org_mediasoup_droid_MediasoupClient_clazz_defined
#define org_mediasoup_droid_MediasoupClient_clazz_defined
inline jclass org_mediasoup_droid_MediasoupClient_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_mediasoup_droid_MediasoupClient,
      &g_org_mediasoup_droid_MediasoupClient_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace mediasoupclient {

static base::android::ScopedJavaLocalRef<jstring> JNI_MediasoupClient_Version(JNIEnv* env);

JNI_GENERATOR_EXPORT jstring Java_org_mediasoup_droid_MediasoupClient_nativeVersion(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_MediasoupClient_Version(env).Release();
}


}  // namespace mediasoupclient

#endif  // org_mediasoup_droid_MediasoupClient_JNI
